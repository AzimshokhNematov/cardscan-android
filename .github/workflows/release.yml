name: Release

on:
  release:
    types: [published]

jobs:
  run_final_checks:
    name: Run final checks
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}
          token: ${{secrets.SERVICE_PERSONAL_ACCESS_TOKEN}}
          submodules: recursive

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: lint
        run: ./gradlew ktlint

      - name: CheckStyle
        run: ./gradlew checkJavaStyle

      - name: test
        run: ./gradlew test

  finalize_release:
    needs: run_final_checks
    name: Finalize Release
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}
          token: ${{secrets.SERVICE_PERSONAL_ACCESS_TOKEN}}
          submodules: recursive

      - name: get current tag
        id: get_tag
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: update version
        env:
          TAG_VERSION: ${{ steps.get_tag.outputs.VERSION }}
        run: |
          truncate -s $(( $(stat -c "%s" gradle.properties) - $(tail -n 1 gradle.properties | wc -c) )) gradle.properties
          echo "version=$TAG_VERSION" >> gradle.properties
          cat gradle.properties

      - name: generate changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          user: "getbouncer"
          project: "cardscan-android"
          repo: "getbouncer/cardscan-android"
          token: ${{ secrets.SERVICE_PERSONAL_ACCESS_TOKEN }}
          sinceTag: "1.0.5151"
          pullRequests: "true"
          prWoLabels: "true"
          issues: "true"
          issuesWoLabels: "true"
          author: "true"
          base: "HISTORY.md"
          unreleased: "true"
          breakingLabels: "Versioning - BREAKING"
          enhancementLabels: "Type - Enhancement, Type - Feature"
          bugLabels: "Type - Fix, Bug - Fixed"
          deprecatedLabels: "Type - Deprecated"
          removedLabels: "Type - Removal"
          securityLabels: "Security Fix"
          excludeLabels: "Skip-Changelog"

      - name: create commit
        id: commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: ${{ github.event.release.target_commitish }}
          commit_message: "Automatic changelog update"
          file_pattern: "gradle.properties CHANGELOG.md"

  publish:
    needs: finalize_release
    name: Publish to MavenCentral
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}
          token: ${{secrets.SERVICE_PERSONAL_ACCESS_TOKEN}}
          submodules: recursive

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Base64 decodes and pipes the GPG key content into the secret file
      - name: Prepare environment
        env:
          GPG_KEY_CONTENTS: ${{ secrets.GPG_KEY }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
        run: |
          git fetch --unshallow
          sudo bash -c "echo '$GPG_KEY_CONTENTS' | base64 -d > '$SIGNING_SECRET_KEY_RING_FILE'"

      - name: Build release
        run: ./gradlew assembleRelease

      - name: Source jar and dokka
        run: ./gradlew androidSourcesJar javadocJar

      - name: Publish to MavenCentral
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
